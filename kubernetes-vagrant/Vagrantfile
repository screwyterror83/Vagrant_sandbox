#Define Variables can be used in vagrantfile
BOX="ubuntu/xenial64"
Init_Path="init-config.sh"

# Setting up general vagrant parameters
Vagrant.configure("2") do |config|
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"
  config.vm.box=BOX
  config.vm.provision "general", type: "shell" do |g|
      s.path = 'init-config.sh'
  end
# Configure first nodes, the master node of kubernetes, name, network adapters and IP
# and VM configuration of Memory and CPU, turn off Serial Ports
  config.vm.define "kube-master" do |master|
    master.vm.hostname = "kubemaster"

    master.vm.network "public_network", bridge: "Intel(R) I211 Gigabit Network Connection"
    master.vm.network "private_network", :name => "VirtualBox Host-Only Ethernet Adapter #3",:adapter => 3, :ip => "192.168.56.20"

    master.vm.provider "virtualbox" do |km|
      km.name="kube-master"
      km.memory=2048
      km.cpus=2
      km.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end
    
# Configure kubeadmin init in master node.    
    master.vm.provision "master",tpye: "shell" do |m|
      m.privileged = false
      m.path = "kubeadm-init.sh"
    end  
  end

# Configure first nodes, the master node of kubernetes, name, network adapters and IP
# and VM configuration of Memory and CPU, turn off Serial Ports   
  config.vm.define "kube-node1" do |node1|
    node1.vm.hostname = "kubenode1"

    node1.vm.network "public_network", bridge: "Intel(R) I211 Gigabit Network Connection"
    node1.vm.network "private_network", :name => "VirtualBox Host-Only Ethernet Adapter #3",:adapter => 3, :ip => "192.168.56.21"

    node1.vm.provider "virtualbox" do |kn1|
      kn1.name="kube-node1"
      kn1.memory=2048
      kn1.cpus=2
      kn1.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end
  end
  
# Configure first nodes, the master node of kubernetes, name, network adapters and IP
# and VM configuration of Memory and CPU, turn off Serial Ports
  config.vm.define "kube-node2" do |node2|
    node2.vm.hostname = "kubenode2"

    node2.vm.network "public_network", bridge: "Intel(R) I211 Gigabit Network Connection" 
    node2.vm.network "private_network", :name => "VirtualBox Host-Only Ethernet Adapter #3",:adapter => 3, :ip => "192.168.56.22"

    node2.vm.provider "virtualbox" do |kn2|
      kn2.name="kube-node2"
      kn2.memory=2048
      kn2.cpus=2
      kn2.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end
  end
end
